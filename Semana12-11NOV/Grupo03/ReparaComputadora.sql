
-- ======================================================
-- CREACIÓN DE LA BASE DE DATOS
-- ======================================================
--ELIMINACION DE UNA BASE DE DATOS CON EL MISMO NOMBRE

USE master;
GO

IF( EXISTS ( SELECT 1 FROM sys.sysdatabases WHERE name='REPARACIONES_UNI' ) )
BEGIN
		ALTER DATABASE REPARACIONES_UNI SET SINGLE_USER WITH ROLLBACK IMMEDIATE; 
		DROP DATABASE REPARACIONES_UNI;
END;
GO
--CREACION
CREATE DATABASE REPARACIONES_UNI;
go

USE REPARACIONES_UNI;
GO


-- ======================================================
-- ELIMINACIÓN DE TABLAS
-- ======================================================



-- ==========================================================
-- Creación de las Tablas
-- ==========================================================
-- Tabla CLIENTE
CREATE TABLE dbo.CLIENTE (
    IDCliente INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
    Nombre VARCHAR(100) NOT NULL,
    Apellido VARCHAR(100) NOT NULL,
    Direccion VARCHAR(150) NOT NULL,
    Telefono INT NOT NULL,
    Email VARCHAR(100) NOT NULL
);
GO

-- Tabla MODELO
CREATE TABLE dbo.MODELO (
    IDModelo INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
    NombreModelo VARCHAR(50) NOT NULL,
    NombreMarca VARCHAR(50) NOT NULL,
	AnioLanzamiento INT NOT NULL, 
);
GO

-- Tabla COMPUTADORA
CREATE TABLE dbo.COMPUTADORA (
    IDComputadora INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
    IDCliente INT NOT NULL,
    IDModelo INT NOT NULL,
    NumeroSerie VARCHAR(50) UNIQUE NOT NULL,
	AnioFabricacion INT NOT NULL, 
    CONSTRAINT FK_COMPUTADORA_CLIENTE FOREIGN KEY (IDCliente) REFERENCES dbo.CLIENTE (IDCliente),
    CONSTRAINT FK_COMPUTADORA_MODELO FOREIGN KEY (IDModelo) REFERENCES dbo.MODELO (IDModelo)
);
GO

-- Tabla TECNICO
CREATE TABLE dbo.TECNICO (
    IDTecnico INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
	HashContrasena VARCHAR(255) NOT NULL,  -- Campo para el hash de la contraseña
    Salt VARCHAR(255) NOT NULL,            -- Campo para la sal utilizada
    Nombre VARCHAR(100) NOT NULL,
    Apellido VARCHAR(100) NOT NULL,
    Direccion VARCHAR(150) NOT NULL,
    Telefono INT NOT NULL,
    Email VARCHAR(100) NOT NULL,
    FechaRegistro DATETIME DEFAULT GETDATE(),
    Activo BIT NOT NULL
);
GO

-- Tabla SESION
CREATE TABLE dbo.SESION (
    IDSesion INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
	IDTecnico INT NOT NULL,
    MSinicio BIGINT NULL,
    TokenSesion VARCHAR(255) NULL,
    DireccionIP VARCHAR(45) NULL,
	CONSTRAINT FK_SESION_TECNICO FOREIGN KEY (IDTecnico) REFERENCES dbo.TECNICO (IDTecnico)
);
GO

-- Tabla REGISTRO
CREATE TABLE dbo.REGISTRO (
    SERIERegistro VARCHAR(10) NOT NULL PRIMARY KEY,
    IDCliente INT NOT NULL,
    IDComputadora INT NOT NULL,
    IDTecnico INT NOT NULL,
    ProblemaReportado VARCHAR(200),
	FechaEstimada DATE NOT NULL
    CONSTRAINT FK_REGISTRO_COMPUTADORA FOREIGN KEY (IDComputadora) REFERENCES dbo.COMPUTADORA (IDComputadora),
    CONSTRAINT FK_REGISTRO_CLIENTE FOREIGN KEY (IDCliente) REFERENCES dbo.CLIENTE (IDCliente),
    CONSTRAINT FK_REGISTRO_TECNICO FOREIGN KEY (IDTecnico) REFERENCES dbo.TECNICO (IDTecnico),
 
);
GO

-- Tabla ESTADO
CREATE TABLE dbo.ESTADO (
    IDEstado INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
    Descripcion VARCHAR(20) NOT NULL
);
GO

-- Tabla REPARACION
CREATE TABLE dbo.REPARACION (
    IDReparacion INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
    SERIERegistro VARCHAR(10) NOT NULL,
    IDComputadora INT NOT NULL,
    IDTecnico INT NOT NULL,
    IDEstado INT NOT NULL,
    FechaInicio DATE NOT NULL,
    FechaRealDeEntrega DATE NOT NULL,
    CostoManoObra DECIMAL(10, 2),
    CostoTotal DECIMAL(10, 2),
    CONSTRAINT FK_REPARACION_REGISTRO FOREIGN KEY (SERIERegistro) REFERENCES dbo.REGISTRO (SERIERegistro),
    CONSTRAINT FK_REPARACION_COMPUTADORA FOREIGN KEY (IDComputadora) REFERENCES dbo.COMPUTADORA (IDComputadora),
    CONSTRAINT FK_REPARACION_TECNICO FOREIGN KEY (IDTecnico) REFERENCES dbo.TECNICO (IDTecnico),
    CONSTRAINT FK_REPARACION_ESTADO FOREIGN KEY (IDEstado) REFERENCES dbo.ESTADO (IDEstado)
);
GO

-- Tabla TIPO SERVICIO
CREATE TABLE dbo.TIPOSERVICIO (
    IDTipoServicio INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
    NombreTipo VARCHAR(30) NOT NULL
);
GO

-- Tabla SERVICIO
CREATE TABLE dbo.SERVICIO (
    IDServicio INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
    IDTipoServicio INT NOT NULL,
	IDReparacion INT NOT NULL,
    NombreServicio VARCHAR(30) NOT NULL,
    Motivo VARCHAR(200),
    CostoServicio DECIMAL(10, 2),
    CONSTRAINT FK_TIPO_SERVICIO FOREIGN KEY (IDTipoServicio) REFERENCES dbo.TIPOSERVICIO (IDTipoServicio),
    CONSTRAINT FK_REPARACION_SERVICIO FOREIGN KEY (IDReparacion) REFERENCES dbo.REPARACION (IDReparacion)
);
GO

-- Tabla TIPOITEM
CREATE TABLE dbo.TIPOITEM (
    IDTipo INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
    NombreTipo VARCHAR(30) NOT NULL
);
GO

-- Tabla ITEM
CREATE TABLE dbo.ITEM (
    IDItem INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
    IDTipo INT NOT NULL,
    Nombre VARCHAR(30) NOT NULL,
    CostoUnitario NUMERIC(10,2) NOT NULL,
    Stock FLOAT NOT NULL,
    CONSTRAINT FK_TIPO_ITEM FOREIGN KEY (IDTipo) REFERENCES dbo.TIPOITEM (IDTipo)
);
GO

-- Tabla COMPATIBILIDAD
CREATE TABLE dbo.COMPATIBILIDAD (
	IDCompatibilidad INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
	IDItem INT NOT NULL,
	IDModelo INT NOT NULL,
    CONSTRAINT FK_COMPATIBILIDAD_ITEM FOREIGN KEY (IDItem) REFERENCES dbo.ITEM (IDItem),
    CONSTRAINT FK_COMPATIBILIDAD_MODELO FOREIGN KEY (IDModelo) REFERENCES dbo.MODELO (IDModelo)
);
GO

-- Tabla USOITEMS
CREATE TABLE dbo.USOITEMS (
    IDUsoItem INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
    IDItem INT NOT NULL,
    IDServicio INT NOT NULL,
    CostoUnitario NUMERIC(10, 2) NOT NULL,
    Cantidad INT NOT NULL,
    CostoTotal AS (CostoUnitario * Cantidad) PERSISTED,
    CONSTRAINT FK_USOITEMS_ITEM FOREIGN KEY (IDItem) REFERENCES dbo.ITEM (IDItem),
    CONSTRAINT FK_USOITEMS_SERVICIO FOREIGN KEY (IDServicio) REFERENCES dbo.SERVICIO (IDServicio)
);
GO

-- Tabla DEUDA
CREATE TABLE dbo.DEUDA (
    IDDeuda INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
    SERIERegistro VARCHAR(10) NOT NULL,
    MontoDeudaTotal NUMERIC(10,2) NOT NULL,
    MontoPagado NUMERIC(10,2) NOT NULL,
    CONSTRAINT FK_DEUDA_REGISTRO FOREIGN KEY (SERIERegistro) REFERENCES dbo.REGISTRO (SERIERegistro)
);
GO

-- Tabla INGRESODEUDA
CREATE TABLE dbo.INGRESODEUDA (
    IDDeudaUnitaria INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
    IDDeuda INT NOT NULL,
    MontoDeudaUnitaria NUMERIC(10,2) NOT NULL,
    Tipo VARCHAR(10),
    CONSTRAINT FK_INGRESODEUDA_DEUDA FOREIGN KEY (IDDeuda) REFERENCES dbo.DEUDA (IDDeuda)
);
GO

-- Tabla PAGO
CREATE TABLE dbo.PAGO (
    IDPago INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
    IDDeuda INT NOT NULL,
    MontoPago NUMERIC(10,2) NOT NULL,
    DeudaPendiente NUMERIC(10,2) NOT NULL,
    CONSTRAINT FK_PAGO_DEUDA FOREIGN KEY (IDDeuda) REFERENCES dbo.DEUDA (IDDeuda)
);
GO